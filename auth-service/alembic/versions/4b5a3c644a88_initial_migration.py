# filepath: /home/imdad-raqib/Desktop/fastapi/my-fastapi-app/alembic/script.py.mako
"""Initial migration

Revision ID: 4b5a3c644a88
Revises: 
Create Date: 2025-01-24 02:28:02.792244

"""
import sqlmodel
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '4b5a3c644a88'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('driver',
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mobile', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ratings', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('driver_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('mobile')
    )
    op.create_index(op.f('ix_driver_driver_id'), 'driver', ['driver_id'], unique=False)
    op.create_table('rider',
    sa.Column('rider_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mobile', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('rider_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('mobile')
    )
    op.create_index(op.f('ix_rider_rider_id'), 'rider', ['rider_id'], unique=False)
    op.create_table('driverlocation',
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('socket_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('h3_index', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.driver_id'], ),
    sa.PrimaryKeyConstraint('driver_id')
    )
    op.create_index(op.f('ix_driverlocation_driver_id'), 'driverlocation', ['driver_id'], unique=False)
    op.create_index(op.f('ix_driverlocation_h3_index'), 'driverlocation', ['h3_index'], unique=False)
    op.create_index(op.f('ix_driverlocation_socket_id'), 'driverlocation', ['socket_id'], unique=False)
    op.create_table('trip',
    sa.Column('trip_id', sa.Integer(), nullable=False),
    sa.Column('rider_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('pickup_location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('destination', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fare', sa.Float(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.driver_id'], ),
    sa.ForeignKeyConstraint(['rider_id'], ['rider.rider_id'], ),
    sa.PrimaryKeyConstraint('trip_id')
    )
    op.create_index(op.f('ix_trip_driver_id'), 'trip', ['driver_id'], unique=False)
    op.create_index(op.f('ix_trip_rider_id'), 'trip', ['rider_id'], unique=False)
    op.create_index(op.f('ix_trip_trip_id'), 'trip', ['trip_id'], unique=False)
    op.create_table('triprequest',
    sa.Column('req_id', sa.Integer(), nullable=False),
    sa.Column('rider_id', sa.Integer(), nullable=False),
    sa.Column('pickup_location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('destination', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['rider_id'], ['rider.rider_id'], ),
    sa.PrimaryKeyConstraint('req_id')
    )
    op.create_index(op.f('ix_triprequest_req_id'), 'triprequest', ['req_id'], unique=False)
    op.create_index(op.f('ix_triprequest_rider_id'), 'triprequest', ['rider_id'], unique=False)
    op.create_table('engageddriver',
    sa.Column('req_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.driver_id'], ),
    sa.ForeignKeyConstraint(['req_id'], ['triprequest.req_id'], ),
    sa.PrimaryKeyConstraint('req_id')
    )
    op.create_index(op.f('ix_engageddriver_driver_id'), 'engageddriver', ['driver_id'], unique=False)
    op.create_index(op.f('ix_engageddriver_req_id'), 'engageddriver', ['req_id'], unique=False)
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_engageddriver_req_id'), table_name='engageddriver')
    op.drop_index(op.f('ix_engageddriver_driver_id'), table_name='engageddriver')
    op.drop_table('engageddriver')
    op.drop_index(op.f('ix_triprequest_rider_id'), table_name='triprequest')
    op.drop_index(op.f('ix_triprequest_req_id'), table_name='triprequest')
    op.drop_table('triprequest')
    op.drop_index(op.f('ix_trip_trip_id'), table_name='trip')
    op.drop_index(op.f('ix_trip_rider_id'), table_name='trip')
    op.drop_index(op.f('ix_trip_driver_id'), table_name='trip')
    op.drop_table('trip')
    op.drop_index(op.f('ix_driverlocation_socket_id'), table_name='driverlocation')
    op.drop_index(op.f('ix_driverlocation_h3_index'), table_name='driverlocation')
    op.drop_index(op.f('ix_driverlocation_driver_id'), table_name='driverlocation')
    op.drop_table('driverlocation')
    op.drop_index(op.f('ix_rider_rider_id'), table_name='rider')
    op.drop_table('rider')
    op.drop_index(op.f('ix_driver_driver_id'), table_name='driver')
    op.drop_table('driver')
    # ### end Alembic commands ###