name: Unit Tests and SonarCloud Analysis

on:
  pull_request:
    branches:
      - main
    types: [reopened, synchronize, opened]

  push:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history is available

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Verify Docker installation
        run: |
          docker --version
          docker compose version
        
      - name: Determine changed services
        id: check_changes
        run: |
          echo "Checking for changes in PR..."
          
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          
          echo "Changed files:"
          echo "$CHANGED_FILES"

          SERVICES=("auth-service" "location-service" "ambulance-finder-service" "trip-service")
          
          CHANGED_SERVICES=()
          
          for SERVICE in "${SERVICES[@]}"; do
            if echo "$CHANGED_FILES" | grep -q "^$SERVICE/"; then
              CHANGED_SERVICES+=("$SERVICE")
            fi
          done
          
          # Convert array to comma-separated string
          CHANGED_SERVICES_STR=$(IFS=,; echo "${CHANGED_SERVICES[*]}")
          
          # Set environment variables
          echo "CHANGED_SERVICES=$CHANGED_SERVICES_STR" >> $GITHUB_ENV
          if [ -n "$CHANGED_SERVICES_STR" ]; then echo "HAS_CHANGES=true" >> $GITHUB_ENV; else echo "HAS_CHANGES=false" >> $GITHUB_ENV; fi
          
          # For debugging
          echo "CHANGED_SERVICES=$CHANGED_SERVICES_STR"


      - name: Run unit tests for each changed service
        if: env.HAS_CHANGES == 'true'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          RIDER_PASSWORD_1: ${{ secrets.RIDER_PASSWORD_1 }}
          RIDER_PASSWORD_2: ${{ secrets.RIDER_PASSWORD_2 }}
          DRIVER_PASSWORD_1: ${{ secrets.DRIVER_PASSWORD_1 }}
          DRIVER_PASSWORD_2: ${{ secrets.DRIVER_PASSWORD_2 }}
        run: |
          IFS=',' read -r -a SERVICES_ARRAY <<< "${{ env.CHANGED_SERVICES }}"
          
          for SERVICE in "${SERVICES_ARRAY[@]}"; do
            echo "Running tests for $SERVICE"
            docker compose -f $SERVICE/docker-compose.dev.yml up --build --abort-on-container-exit $SERVICE-test
          done
            

      - name: SonarCloud Scan
        if: env.HAS_CHANGES == 'true'
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          